//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CoffeeShopDB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CoffeeShopDBEntities : DbContext
    {
        public CoffeeShopDBEntities()
            : base("name=CoffeeShopDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<account> accounts { get; set; }
        public virtual DbSet<customer_types> customer_types { get; set; }
        public virtual DbSet<employee> employees { get; set; }
        public virtual DbSet<good> goods { get; set; }
        public virtual DbSet<material_good_links> material_good_links { get; set; }
        public virtual DbSet<material> materials { get; set; }
        public virtual DbSet<order_positions> order_positions { get; set; }
        public virtual DbSet<order> orders { get; set; }
        public virtual DbSet<provider> providers { get; set; }
        public virtual DbSet<sales_points> sales_points { get; set; }
        public virtual DbSet<transaction_types> transaction_types { get; set; }
        public virtual DbSet<transaction> transactions { get; set; }
        public virtual DbSet<unit> units { get; set; }
    
        public virtual int change_inventory(Nullable<int> employee_id, Nullable<int> withdraw_type_id)
        {
            var employee_idParameter = employee_id.HasValue ?
                new ObjectParameter("employee_id", employee_id) :
                new ObjectParameter("employee_id", typeof(int));
    
            var withdraw_type_idParameter = withdraw_type_id.HasValue ?
                new ObjectParameter("withdraw_type_id", withdraw_type_id) :
                new ObjectParameter("withdraw_type_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("change_inventory", employee_idParameter, withdraw_type_idParameter);
        }
    
        public virtual int create_client_order(Nullable<int> employee_id, Nullable<int> num, string customer_type_name, Nullable<bool> is_card_payment)
        {
            var employee_idParameter = employee_id.HasValue ?
                new ObjectParameter("employee_id", employee_id) :
                new ObjectParameter("employee_id", typeof(int));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            var customer_type_nameParameter = customer_type_name != null ?
                new ObjectParameter("customer_type_name", customer_type_name) :
                new ObjectParameter("customer_type_name", typeof(string));
    
            var is_card_paymentParameter = is_card_payment.HasValue ?
                new ObjectParameter("is_card_payment", is_card_payment) :
                new ObjectParameter("is_card_payment", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("create_client_order", employee_idParameter, numParameter, customer_type_nameParameter, is_card_paymentParameter);
        }
    
        public virtual int create_order(Nullable<int> employee_id, Nullable<int> num, string provider_name, Nullable<int> transaction_type_id)
        {
            var employee_idParameter = employee_id.HasValue ?
                new ObjectParameter("employee_id", employee_id) :
                new ObjectParameter("employee_id", typeof(int));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            var provider_nameParameter = provider_name != null ?
                new ObjectParameter("provider_name", provider_name) :
                new ObjectParameter("provider_name", typeof(string));
    
            var transaction_type_idParameter = transaction_type_id.HasValue ?
                new ObjectParameter("transaction_type_id", transaction_type_id) :
                new ObjectParameter("transaction_type_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("create_order", employee_idParameter, numParameter, provider_nameParameter, transaction_type_idParameter);
        }
    
        public virtual int get_current_day_client_orders(Nullable<int> employee_id)
        {
            var employee_idParameter = employee_id.HasValue ?
                new ObjectParameter("employee_id", employee_id) :
                new ObjectParameter("employee_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("get_current_day_client_orders", employee_idParameter);
        }
    
        public virtual int get_current_inventory(Nullable<int> employee_id)
        {
            var employee_idParameter = employee_id.HasValue ?
                new ObjectParameter("employee_id", employee_id) :
                new ObjectParameter("employee_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("get_current_inventory", employee_idParameter);
        }
    
        public virtual ObjectResult<get_employee_Result> get_employee(string login, string password)
        {
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_employee_Result>("get_employee", loginParameter, passwordParameter);
        }
    
        public virtual int get_provider_orders(Nullable<int> employee_id)
        {
            var employee_idParameter = employee_id.HasValue ?
                new ObjectParameter("employee_id", employee_id) :
                new ObjectParameter("employee_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("get_provider_orders", employee_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> get_sales_point_workers(Nullable<int> employee_id)
        {
            var employee_idParameter = employee_id.HasValue ?
                new ObjectParameter("employee_id", employee_id) :
                new ObjectParameter("employee_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("get_sales_point_workers", employee_idParameter);
        }
    
        public virtual int is_client_order_exists(Nullable<int> client_order_id, ObjectParameter is_exists)
        {
            var client_order_idParameter = client_order_id.HasValue ?
                new ObjectParameter("client_order_id", client_order_id) :
                new ObjectParameter("client_order_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("is_client_order_exists", client_order_idParameter, is_exists);
        }
    
        public virtual int is_tran_order_exists(Nullable<int> tran_order_id, ObjectParameter is_exists)
        {
            var tran_order_idParameter = tran_order_id.HasValue ?
                new ObjectParameter("tran_order_id", tran_order_id) :
                new ObjectParameter("tran_order_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("is_tran_order_exists", tran_order_idParameter, is_exists);
        }
    
        public virtual int report_get_revenue(Nullable<int> employee_id)
        {
            var employee_idParameter = employee_id.HasValue ?
                new ObjectParameter("employee_id", employee_id) :
                new ObjectParameter("employee_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("report_get_revenue", employee_idParameter);
        }
    
        public virtual int report_get_sold_goods(Nullable<int> employee_id)
        {
            var employee_idParameter = employee_id.HasValue ?
                new ObjectParameter("employee_id", employee_id) :
                new ObjectParameter("employee_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("report_get_sold_goods", employee_idParameter);
        }
    }
}
